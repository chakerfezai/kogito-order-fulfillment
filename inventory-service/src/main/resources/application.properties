%dev.quarkus.http.port=8098

quarkus.rest.path=/api
quarkus.smallrye-openapi.path=/swagger
quarkus.http.cors=true
#H2 DB
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.driver=org.h2.Driver
quarkus.datasource.jdbc.url=jdbc:h2:mem:database/public;DB_CLOSE_DELAY=-1
#ORM
quarkus.hibernate-orm.scripts.generation.create-target=import.sql
%prod.quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.hibernate-orm.database.generation=drop-and-create

#Rest client
%dev.quarkus.rest-client.order-api.url=http://localhost:8090
%prod.quarkus.rest-client.order-api.url=http://order:8090

quarkus.container-image.build=true
quarkus.container-image.group=sciam
quarkus.container-image.name=order-inventory
quarkus.container-image.tag=2.0
quarkus.jib.ports=8092
#for mac arm64
quarkus.jib.platforms=linux/arm64/v8


%dev.kafka.bootstrap.servers=localhost:9093
%prod.kafka.bootstrap.servers=kafka:9092
mp.messaging.outgoing.orders-stock-out.connector=smallrye-kafka
mp.messaging.outgoing.orders-stock-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
quarkus.messaging.auto-connector-attachment=false

mp.messaging.incoming.orders-stock-in.connector=smallrye-kafka
mp.messaging.incoming.orders-stock-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.orders-stock-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

