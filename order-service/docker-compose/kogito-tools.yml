version: '3.8'
name: tools
services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - ./sql:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "kogito", "-U", "kogito-user" ]
      timeout: 45s
      interval: 10s
      retries: 50
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - kogito-net

  pgadmin-compose:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: user@user.org
      PGADMIN_DEFAULT_PASSWORD: pass
    ports:
      - 8055:80
    depends_on:
      postgres:
        condition: service_healthy
    container_name: pgadmin-container
    networks:
      - kogito-net

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:legacy
    ports:
      - "8480:8080"
    volumes:
      - ./keycloak/kogito-realm.json:/tmp/kogito-realm.json
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/auth/realms/kogito" ]
      interval: 1s
      timeout: 1s
      retries: 50
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: kogito
      DB_USER: kogito-user
      DB_SCHEMA: public
      DB_PASSWORD: kogito-pass
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/kogito-realm.json
    networks:
      - kogito-net

  data-index:
    container_name: data-index
    image: quay.io/kiegroup/kogito-data-index-postgresql:1.44
    ports:
      - "8180:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./target/protobuf:/home/kogito/data/protobufs/
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/kogito"
      QUARKUS_DATASOURCE_USERNAME: kogito-user
      QUARKUS_DATASOURCE_PASSWORD: kogito-pass
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      KOGITO_DATA_INDEX_PROPS: -Dquarkus.hibernate-orm.database.generation=update
    networks:
      - kogito-net

  management-console:
    container_name: management-console
    image: quay.io/kiegroup/kogito-management-console:1.44
    ports:
      - "8280:8080"
    depends_on:
      data-index:
        condition: service_started
      keycloak:
        condition: service_healthy
    volumes:
      - ../target/classes/META-INF/processSVG/:/home/kogito/data/svg/
    environment:
      KOGITO_DATAINDEX_HTTP_URL: http://localhost:8180/graphql
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      KOGITO_MANAGEMENT_CONSOLE_PROPS: -Dkogito.consoles.keycloak.config.url=http://localhost:8480/auth
        -Dkogito.consoles.keycloak.config.health-check-url=http://localhost:8480/auth/realms/kogito/.well-known/openid-configuration
        -Dkogito.svg.folder.path=/home/kogito/data/svg
    networks:
      - kogito-net

  task-console:
    container_name: task-console
    image: quay.io/kiegroup/kogito-task-console:1.44
    ports:
      - "8380:8080"
    depends_on:
      data-index:
        condition: service_started
      keycloak:
        condition: service_healthy
    environment:
      KOGITO_DATAINDEX_HTTP_URL: http://localhost:8180/graphql
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      KOGITO_TASK_CONSOLE_PROPS: -Dkogito.consoles.keycloak.config.url=http://localhost:8480/auth
        -Dkogito.consoles.keycloak.config.health-check-url=http://localhost:8480/auth/realms/kogito/.well-known/openid-configuration
    networks:
      - kogito-net